name: react-native-android-build-apk

on: pull_request

jobs:
  install-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
          id: yarn-cache 
          with:
            path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
            key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            restore-keys: |
              ${{ runner.os }}-yarn-
      - name: Install yarn dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true' # cache check
        run: |
          yarn install
          
  build-android:
    needs: install-and-test
    runs-on: ubuntu-latest
    steps:
      # step 1 
      - name: Checkout source code
        uses: actions/checkout@v2
      # step 2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
          id: yarn-cache 
          with:
            path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
            key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            restore-keys: |
              ${{ runner.os }}-yarn-
      - name: Install yarn dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true' # cache check
        run: |
          yarn install
      # step 3
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      # step 4
      - name: Build Android Release
        run: |
          cd android && ./gradlew assembleRelease
      # step 5
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d_%H%M%S')"
      # step 6
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-release-${{ steps.date.outputs.date }}
          path: android/app/build/outputs/apk/release/
